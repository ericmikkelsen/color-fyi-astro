---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import Color from "colorjs.io";
import colorTable from "../../modules/colorTable.js";
export const prerender = false;
const colors = Astro.url.searchParams?.get("colors")?.split(",").map(color => {
    return color.trim();
}).filter(Boolean) || [];
const hasColorToAdd = !!Astro.url.searchParams?.get("color") || false;
if (hasColorToAdd) {
    const colorToAdd = Astro.url.searchParams?.get("color").trim();
    if(!colors.includes(colorToAdd)){
        colors.push(colorToAdd);
        return Astro.redirect(`/compare-colors/?colors=${encodeURIComponent( colors.join(', ') )}`);
    }
}
let colorOutput = "";
if (colors && colors.length > 1) {
    colorOutput = colorTable(colors);
}
---
<Layout title={"Compare colors"}>
    <Header>Compare colors</Header>
    <main>
        <form action="./">
            <label for="colors">
                <span>
                    Add a comma seperated list of colors to find out which pairs of colors are accessible or not.
                </span>
            </label>
                <input-params>
                    <textarea 
                        cols="30" 
                        id="colors" 
                        name="colors" 
                        rows="3"
                        >{colors.join(", ")}</textarea>
                    <div class="input-example">For example: #ff0000, #ffffff, #fb0.</div>
                </input-params>
            <div class="controls">
                <label for="color" class="color-picker">
                    Or use this color picker to add a color to the box above
                    <input value='' name="color" id="color" type="color" class="js-add-color" data-for="colors">
                </label>
                <a class="big-link" href="/compare-colors/#colors">
                    <svg class="icon-no" xmlns="http://www.w3.org/2000/svg" width="24" height="24" stroke="currentColor" stroke-width="4">
                        <path d="m6 6 12 12M6 18 18 6"/>
                    </svg><span>Clear colors</span>
                </a>
            </div>
            <button type="submit">submit</button>
        </form>
        <compare-colors data-prerendered="true">
            <Fragment set:html={colorOutput} />
        </compare-colors>
    </main>
</Layout>
<style>
    label {
        display: block;
        line-height: 2;
        margin-top: 1em;
        line-height: 1.5;
    }
    textarea {
        color: #000;
        box-sizing: border-box;
        display: block;
        width: 100%;
        padding: 2.5%;
        border: 0.25em solid #000;
        border-radius: 1em;
        margin: 1em 0 0;
        font-size: 1rem;
        border-bottom: 0;
        border-bottom:0;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }
    .input-example {
        margin: 0 0 0;
        background-color: rgba(118,118,118,.5);
        padding: .5em 2.5%;
        border: .25em solid currentColor;
        border-top: 0;
        border-bottom-left-radius: 1em;
        border-bottom-right-radius: 1em;

    }
    @media (prefers-color-scheme: dark) {
        textarea {
            border-color:transparent;
        }
    }
    textarea:focus {
        outline: 0.125em solid var(--color);
        outline-offset: .125em;
    }
    button {
        color: var(--bg);
        background: var(--color);
        border: 0.25em solid;
        appearance: none;
        padding: 1em 2.5%;
        border-radius: 1em;
        font-size: 1em;
        line-height: 1;
    }
    .controls {
        display: flex;
        align-items: baseline;
    }
    .controls > * {
        margin: 0 1em 0 0;
        vertical-align: baseline;
    }
    .controls label {
        padding: 1em 0;
    }
    .color-picker {
        display: inline-block;
    }
    @media print {
        form {
            display: none !important;
        }
    }
</style>
<style is:global>
    input-params:defined ~ button {
        display: none;
    }
    compare-colors p,
    compare-colors svg {
        vertical-align: middle;
    }
    compare-colors span {
        display: inline-block;
    }
    add-color {
        display: block;
    }
    .icon-no {
        stroke-width: 4.5;
    }
    .icon-large {
        stroke-width: 1.25;
    }
    .icon-yes {
        stroke-width: 1.25;
    }
    circle {
        stroke: rgba(118,118,118,.5);
    }
</style>
<script src="../../modules/compare-colors.js"></script>
<script src="../../modules/input-params.js"></script>
<script>
const getColors = () => {
  const url = new URL(window.location.href);
  const colorString = url.searchParams.get('colors');
  const colors = url.searchParams.get('colors');
  return colors;
}
const setColors = () => {
  const colors = getColors();
  const compareColors = document.querySelector('compare-colors');
  if( compareColors) {
      compareColors.dataset.colors = colors || '';
  }
}

setColors();
window.addEventListener("popstate", (event) => {
  setColors();
});
const colorPicker = document.querySelector('.js-add-color');
colorPicker.addEventListener('change',(event => {
    const input = document.getElementById(colorPicker.dataset.for);
    console.log(colorPicker)
    input.value = input.value ? `${input.value}, ${colorPicker.value}` : colorPicker.value
    const changeEvent = new Event('input');
    input.dispatchEvent(changeEvent);
}))
</script>
