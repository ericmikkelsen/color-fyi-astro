---
interface Props {
	title: string;
	isHome: boolean;
	borderColor: string;
}
const navLinks = [
	{
		text: 'colors.fyi',
		url: '/',
		h1: true,
	},
	{
		text: 'Compare colors',
		url: '/compare-colors/',
	},
].map(link => {
	link.current = Astro.url.pathname === link.url
	return link
});

const { title, isHome,borderColor = 'var(--color)' } = Astro.props;
---
<!doctype html>
<html lang="en" style={`--accent:${borderColor}`}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link rel="stylesheet" href="/style.css">
		<style>
			nav {
				padding-top: 15%;
				margin-top: 1em;
				vertical-align: baseline;
			}
			nav > * {
				margin: 0 1em 0 0;
			}
		</style>
	</head>
	<body>
		<nav class="container">
			{navLinks.map(link => {
				return <a 
					href={link.url} 
					class="big-link"
				>
					<span>
						{link.text}
					</span>
				</a>
			})}
		</nav>
		<slot />
	</body>
</html>
<style>
	@media print {
        nav {
            display: none !important;
        }
    }
	.big-link span {
		border-bottom-color: var(--accent);
	}
</style>